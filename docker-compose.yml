services:
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: blog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senocak
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./var/logs/postgresql:/var/log/postgresql
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical" # for debezium
    #OR
    #command: [ "postgres", "-c", "wal_level=logical" ]
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready -U postgres"
    networks:
      - backend
  backend:
    build:
      context: ./spring-kotlin
      dockerfile: Dockerfile
    container_name: spring
    ports:
      - "8080:8080"
    restart: always
    environment:
      SERVER_IP: postgres # or mysql
      POSTGRESQL_PORT: 3306
      POSTGRESQL_DB: spring
      POSTGRESQL_SCHEMA: public
      POSTGRESQL_USER: root
      POSTGRESQL_PASSWORD: senocak
      DDL_AUTO: verify
    depends_on:
      - postgres
    networks:
      - backend
volumes:
  postgres-data:
networks:
  backend:
